{"version":3,"sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/synth.ts","../editor/BarScrollBar.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/Layout.ts","../editor/LayoutPrompt.ts","../editor/LimiterPrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/Selection.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveLength","sineWaveMask","sineWave","generateSineWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","A","B","#","♯","b","♭","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","prompt","record","_validate","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","group","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","topPitch","bottomPitch","topRange","bottomRange","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","pitchHeight","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","dropdown","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":"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,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB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","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n\tdecay,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n\t\t{ name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n\r\n\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n\t\t{ name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin: number = 30;\r\n\tpublic static readonly tempoMax: number = 320;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 3;\r\n\tpublic static readonly beatsPerBarMax: number = 16;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 256;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 10;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n\t\t{ name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t]);\r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n\t\t{ name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n\t\t{ name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box...\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n\t\t{ name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n\t\t{ name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n\t\t{ name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n\t\t{ name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 40;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 8;\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"JummBox \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\" :  `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n    beatCount = CharCode.a,\r\n    bars = CharCode.b,\r\n    vibrato = CharCode.c,\r\n    transition = CharCode.d,\r\n    loopEnd = CharCode.e,\r\n    filterCutoff = CharCode.f,\r\n    barCount = CharCode.g,\r\n    interval = CharCode.h,\r\n    instrumentCount = CharCode.i,\r\n    patternCount = CharCode.j,\r\n    key = CharCode.k,\r\n    loopStart = CharCode.l,\r\n    reverb = CharCode.m,\r\n    channelCount = CharCode.n,\r\n    channelOctave = CharCode.o,\r\n    patterns = CharCode.p,\r\n    effects = CharCode.q,\r\n    rhythm = CharCode.r,\r\n    scale = CharCode.s,\r\n    tempo = CharCode.t,\r\n    preset = CharCode.u,\r\n    volume = CharCode.v,\r\n    wave = CharCode.w,\r\n\r\n    filterResonance = CharCode.y,\r\n    filterEnvelope = CharCode.z,\r\n    algorithm = CharCode.A,\r\n    feedbackAmplitude = CharCode.B,\r\n    chord = CharCode.C,\r\n    detune = CharCode.D,\r\n    operatorEnvelopes = CharCode.E,\r\n    feedbackType = CharCode.F,\r\n    arpeggioSpeed = CharCode.G,\r\n    harmonics = CharCode.H,\r\n\r\n    squareDuty = CharCode.K,\r\n    panning = CharCode.L,\r\n    customChipWave = CharCode.M,\r\n    songTitle = CharCode.N,\r\n    limiterSettings = CharCode.O,\r\n    operatorAmplitudes = CharCode.P,\r\n    operatorFrequencies = CharCode.Q,\r\n\r\n    spectrum = CharCode.S,\r\n    startInstrument = CharCode.T,\r\n    channelNames = CharCode.U,\r\n    feedbackEnvelope = CharCode.V,\r\n    pulseWidth = CharCode.W,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n    private _bits: number[] = [];\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    volume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n    return { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n\r\n    public constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestVolume: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestVolume < pin.volume) {\r\n                    loudestVolume = pin.volume;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 6);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n        }\r\n        return newNote;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public instrument: number = 0;\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instrument = 0;\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 0;\r\n    public amplitude: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 0;\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.envelope = (index == 0) ? 0 : 1;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.envelope = other.envelope;\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(lowestOctave: number): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.chipNoiseLength;\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const highestOctave: number = 14;\r\n            const falloffRatio: number = 0.25;\r\n            // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n            const pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n            function controlPointToOctave(point: number): number {\r\n                return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n            }\r\n\r\n            let combinedAmplitude: number = 1;\r\n            for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n                const value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n                const value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n                const octave1: number = controlPointToOctave(i - 1);\r\n                let octave2: number = controlPointToOctave(i);\r\n                if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n                if (value1 == 0 && value2 == 0) continue;\r\n\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n            }\r\n            if (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n                combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n            scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n            // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    private _wave: Float32Array | null = null;\r\n    private _waveIsReady: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        this._waveIsReady = false;\r\n    }\r\n\r\n    public getCustomWave(): Float32Array {\r\n        if (!this._waveIsReady || this._wave == null) {\r\n            let waveLength: number = Config.harmonicsWavelength;\r\n            const retroWave: Float32Array = getDrumWave(0);\r\n\r\n            if (this._wave == null || this._wave.length != waveLength + 1) {\r\n                this._wave = new Float32Array(waveLength + 1);\r\n            }\r\n            const wave: Float32Array = this._wave;\r\n\r\n            for (let i: number = 0; i < waveLength; i++) {\r\n                wave[i] = 0;\r\n            }\r\n\r\n            const overallSlope: number = -0.25;\r\n            let combinedControlPointAmplitude: number = 1;\r\n\r\n            for (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n                const harmonicFreq: number = harmonicIndex + 1;\r\n                let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n                if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                    controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n                }\r\n                const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n                let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n                if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                    combinedControlPointAmplitude += amplitude;\r\n                }\r\n                amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n                // Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n                // retro wave (effectively random) to avoid egregiously tall spikes.\r\n                amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n                wave[waveLength - harmonicFreq] = amplitude;\r\n            }\r\n\r\n            inverseRealFourierTransform(wave, waveLength);\r\n\r\n            // Limit the maximum wave amplitude.\r\n            const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n            let cumulative: number = 0;\r\n            let wavePrev: number = 0;\r\n            for (let i: number = 0; i < wave.length; i++) {\r\n                cumulative += wavePrev;\r\n                wavePrev = wave[i] * mult;\r\n                wave[i] = cumulative;\r\n            }\r\n            // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n            wave[waveLength] = wave[0];\r\n\r\n            this._waveIsReady = true;\r\n        }\r\n        return this._wave;\r\n    }\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n    public chipNoise: number = 1;\r\n    public filterCutoff: number = 12;\r\n    public filterResonance: number = 0;\r\n    public filterEnvelope: number = 1;\r\n    public transition: number = 1;\r\n    public vibrato: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public interval: number = 0;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public tieNoteTransition: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public detune: number = 0;\r\n    public pulseWidth: number = Config.pulseWidthRange;\r\n    public pulseEnvelope: number = 1;\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public feedbackAmplitude: number = 0;\r\n    public feedbackEnvelope: number = 1;\r\n    public LFOtime: number = 0;\r\n    public nextLFOtime: number = 0;\r\n    public arpTime: number = 0;\r\n    public customChipWave: Float64Array = new Float64Array(64);\r\n    public customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modStatuses: ModStatus[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modSettings: ModSetting[] = [];\r\n\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(0);\r\n                this.modStatuses.push(ModStatus.msNone);\r\n                this.modInstruments.push(0);\r\n                this.modSettings.push(ModSetting.mstNone);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.arpeggioSpeed = 12;\r\n        this.detune = 0;\r\n        this.tieNoteTransition = false;\r\n        this.clicklessTransition = false;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.filterCutoff = 6;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = 1;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                this.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.transition = 1;\r\n                this.effects = 0;\r\n                this.chord = 2;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.transition = 1;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.effects = 0;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 0;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.filterCutoff = 10;\r\n                this.filterResonance = 0;\r\n                this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 1;\r\n                this.chord = 2;\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n                this.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modStatuses = [];\r\n                this.modInstruments = [];\r\n                this.modSettings = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(0);\r\n                    this.modStatuses.push(ModStatus.msNone);\r\n                    this.modInstruments.push(0);\r\n                    this.modSettings.push(ModSetting.mstNone);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n            \"panDelay\": this.panDelay,\r\n            \"arpeggioSpeed\": this.arpeggioSpeed,\r\n            \"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n            \"tieNoteTransition\": this.tieNoteTransition,\r\n            \"clicklessTransition\": this.clicklessTransition,\r\n            \"vibrato\": this.vibrato,\r\n            \"vibratoDepth\": this.vibratoDepth,\r\n            \"vibratoDelay\": this.vibratoDelay,\r\n            \"vibratoSpeed\": this.vibratoSpeed,\r\n            \"vibratoType\": this.vibratoType,\r\n            \"detune\": this.detune,\r\n            \"effects\": Config.effectsNames[this.effects],\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n            instrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n            instrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n\r\n            instrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"envelope\": Config.envelopes[operator.envelope].name,\r\n                });\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n            instrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n            instrumentObject[\"operators\"] = operatorArray;\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modStatuses\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n                instrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n        return instrumentObject;\r\n    }\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n//         if (type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip); // TODO: a\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            this.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else {\r\n            this.detune = 0;\r\n        }\r\n\r\n        const oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n        const transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n        this.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n        if (this.transition == -1) this.transition = 1;\r\n\r\n        this.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n        if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n        if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n            this.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n        } else {\r\n            this.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        }\r\n        if (instrumentObject[\"filterResonance\"] != undefined) {\r\n            this.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n        } else {\r\n            this.filterResonance = 0;\r\n        }\r\n        this.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n        if (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n        if (instrumentObject[\"filter\"] != undefined) {\r\n            const legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n            const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n            const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n            const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n            let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n            if (legacyFilter == -1) legacyFilter = 0;\r\n            this.filterCutoff = legacyToCutoff[legacyFilter];\r\n            this.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n            this.filterResonance = 0;\r\n        }\r\n\r\n        const legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            if (instrumentObject[\"spectrum\"] != undefined) {\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        this.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n                        if (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            if (instrumentObject[\"harmonics\"] != undefined) {\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n                }\r\n            }\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n                this.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n            } else {\r\n                this.pulseWidth = Config.pulseWidthRange;\r\n            }\r\n\r\n            if (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n                this.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n                if (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 0;\r\n        } else if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (this.chipWave == -1) this.chipWave = 1;\r\n\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n        } else if (this.type == InstrumentType.fm) {\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 3;\r\n\r\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n            if (this.algorithm == -1) this.algorithm = 0;\r\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n            if (this.feedbackType == -1) this.feedbackType = 0;\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            const legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n            this.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n            if (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n            for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                operator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n                if (operator.envelope == -1) operator.envelope = 0;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"interval\"] != undefined) {\r\n                this.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            } else if (instrumentObject[\"chorus\"] != undefined) {\r\n                const legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n                this.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n                if (this.interval == -1) this.interval = 0;\r\n            }\r\n\r\n            if (instrumentObject[\"vibrato\"] != undefined) {\r\n                this.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n                if (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n                if (this.vibrato == Config.vibratos.length) {\r\n                    this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                    this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                    this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                    this.vibratoType = instrumentObject[\"vibratoType\"];\r\n                }\r\n                else { // Set defaults for the vibrato profile\r\n                    this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                    this.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n                    this.vibratoSpeed = 10; // default;\r\n                    this.vibratoType = Config.vibratos[this.vibrato].type;\r\n                }\r\n            } else if (instrumentObject[\"effect\"] != undefined) {\r\n                this.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n                if (this.vibrato == -1) this.vibrato = 0;\r\n            }\r\n\r\n            this.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n            if (this.chord == -1) this.chord = 2;\r\n\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n                this.interval = 2;\r\n                this.chord = 3;\r\n            }\r\n\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    this.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n                }\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type.\");\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n                this.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n            }\r\n            else {\r\n                this.tieNoteTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number) {\r\n        return 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n    }\r\n\r\n    public warmUp(): void {\r\n        this.LFOtime = 0;\r\n        this.nextLFOtime = 0;\r\n        this.arpTime = 0;\r\n        if (this.type == InstrumentType.noise) {\r\n            getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            this.harmonicsWave.getCustomWave();\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            this.spectrumWave.getCustomWave(8);\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    public getDrumWave(): Float32Array {\r\n        if (this.type == InstrumentType.noise) {\r\n            return getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            return this.spectrumWave.getCustomWave(8);\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumWave\");\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n            this.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n    }\r\n    public getChord(): Chord {\r\n        return this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n    }\r\n    public getFilterCutoffOctaves(): number {\r\n        return this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n    }\r\n    public getFilterIsFirstOrder(): boolean {\r\n        return this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n    }\r\n    public getFilterResonance(): number {\r\n        return this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n    }\r\n    public getFilterEnvelope(): Envelope {\r\n        if (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n        return Config.envelopes[this.filterEnvelope];\r\n    }\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport enum ModStatus {\r\n    msForPitch = 0,\r\n    msForNoise = 1,\r\n    msForSong = 2,\r\n    msNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n    mstNone = 0,\r\n    mstSongVolume = 1,\r\n    mstTempo = 2,\r\n    mstReverb = 3,\r\n    mstNextBar = 4,\r\n    mstInsVolume = 5,\r\n    mstPan = 6,\r\n    mstFilterCut = 7,\r\n    mstFilterPeak = 8,\r\n    mstFMSlider1 = 9,\r\n    mstFMSlider2 = 10,\r\n    mstFMSlider3 = 11,\r\n    mstFMSlider4 = 12,\r\n    mstFMFeedback = 13,\r\n    mstPulseWidth = 14,\r\n    mstDetune = 15,\r\n    mstVibratoDepth = 16,\r\n    mstSongDetune = 17,\r\n    mstVibratoSpeed = 18,\r\n    mstVibratoDelay = 19,\r\n    mstArpeggioSpeed = 20,\r\n    mstPanDelay = 21,\r\n    mstResetArpeggio = 22,\r\n    mstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = \"BeepBox\";\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 8;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 4;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n    private static readonly _variant = 0x6A; //\"j\" ~ jummbox\r\n\r\n    public title: string;\r\n    public scale: number;\r\n    public key: number;\r\n    public tempo: number;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public instrumentsPerChannel: number;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n\r\n    // Maximum value possible for the mod (total number of possible positions)\r\n    public mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n        [ModSetting.mstReverb, Config.reverbRange - 1],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Config.volumeRange],\r\n        [ModSetting.mstPan, Config.panMax],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n        [ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n        [ModSetting.mstVibratoDepth, 50],\r\n        [ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n        [ModSetting.mstVibratoSpeed, 30],\r\n        [ModSetting.mstVibratoDelay, 50],\r\n        [ModSetting.mstArpeggioSpeed, 50],\r\n        [ModSetting.mstPanDelay, 20],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ]\r\n    );\r\n\r\n    // When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n    public mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n        [ModSetting.mstNone, 6],\r\n        [ModSetting.mstSongVolume, 100],\r\n        [ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n        [ModSetting.mstReverb, 0],\r\n        [ModSetting.mstNextBar, 1],\r\n        [ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n        [ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n        [ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n        [ModSetting.mstFilterPeak, 0],\r\n        [ModSetting.mstFMSlider1, 15],\r\n        [ModSetting.mstFMSlider2, 15],\r\n        [ModSetting.mstFMSlider3, 15],\r\n        [ModSetting.mstFMSlider4, 15],\r\n        [ModSetting.mstFMFeedback, 15],\r\n        [ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n        [ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n        [ModSetting.mstVibratoDepth, 0],\r\n        [ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n        [ModSetting.mstVibratoSpeed, 0],\r\n        [ModSetting.mstVibratoDelay, 0],\r\n        [ModSetting.mstArpeggioSpeed, 10],\r\n        [ModSetting.mstPanDelay, 10],\r\n        [ModSetting.mstResetArpeggio, 1],\r\n        [ModSetting.mstMaxValue, 6],\r\n    ])\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    public modValueToReal(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value += Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value -= Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value += Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value += Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    public isSettingForSong(setting: ModSetting): boolean {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstNextBar:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    public realToModValue(value: number, setting: ModSetting): number {\r\n        switch (setting) {\r\n            case ModSetting.mstTempo:\r\n                value -= Config.tempoMin;\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n                value += Config.volumeRange / 2.0;\r\n                break;\r\n            case ModSetting.mstDetune:\r\n                value -= Config.detuneMin;\r\n                break;\r\n            case ModSetting.mstSongDetune:\r\n                value -= Config.songDetuneMin;\r\n                break;\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstNextBar:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstNone:\r\n            default:\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            \r\n            // For tempo, actually use user defined tempo\r\n            if (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n                cap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n            }\r\n            \r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n        if (!isMod)\r\n            return 6;\r\n        else {\r\n            let cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n            if (cap != undefined)\r\n                return cap;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getChannelIsNoise(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channel: number): boolean {\r\n        return (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.key = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 150;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 1;\r\n        this.instrumentsPerChannel = 1;\r\n\r\n        this.title = \"Unnamed\";\r\n        document.title = EditorConfig.versionDisplayName;\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 0;\r\n            for (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n                for (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                for (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let bar = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n        buffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\r\n        buffer.push(SongTagCode.songTitle);\r\n\r\n        // Length of the song name string\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                buffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n                buffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                    buffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n                    buffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n                    buffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n                    buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.fm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n                    buffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorEnvelopes);\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.filterEnvelope);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (instrument.chord == 2) {\r\n                        buffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    }\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n                    buffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                }\r\n                else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channel].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        let neededInstrumentBits: number = 0;\r\n        while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modStatus: ModStatus = instrument.modStatuses[mod];\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modSettings[mod];\r\n\r\n                        bits.write(2, modStatus);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededInstrumentBits, modInstrument);\r\n                        }\r\n\r\n                        // Mod setting is only used if the status isn't \"none\".\r\n                        if (modStatus != ModStatus.msNone) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n            let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n            const recentShapes: any[] = [];\r\n\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                bits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(3, note.pins[0].volume); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(3, pin.volume); // volume\r\n                            }\r\n                            else {\r\n                                shapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest, then...\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\r\n        const maxApplyArgs: number = 64000;\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists.\r\n            return String.fromCharCode.apply(null, buffer);\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    public fromBase64String(compressed: string): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        var variant: string = \"beepbox\";\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            variant = \"jummbox\";\r\n            charIndex++;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n        if (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        this.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n        if (beforeThree && variant == \"beepbox\") {\r\n            // Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) channel.instruments[0].transition = 0;\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let toSetOctaves: number[] = [];\r\n        let command: number;\r\n        let channel: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songTitle: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n                charIndex += songNameLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (variant == \"beepbox\" || beforeTwo) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                }\r\n                else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (variant == \"beepbox\") this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && variant == \"beepbox\") {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && variant == \"beepbox\") {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (variant == \"beepbox\") {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n                else {\r\n                    this.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channel].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                if (variant == \"beepbox\" && beforeEight) {\r\n                    this.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    this.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    for (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        this.channels[channel].patterns[pattern] = new Pattern();\r\n                    }\r\n                    this.channels[channel].patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                const instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n                for (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n                    const isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n                    const isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n                    for (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                        this.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    this.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n                    if (beforeSix && variant == \"beepbox\") {\r\n                        for (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n                if (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n                    if (this.rhythm == 0 || this.rhythm == 2) {\r\n                        useSlowerArpSpeed = true;\r\n                    }\r\n                    // Use faster two note arp on these rhythms\r\n                    if (this.rhythm >= 2) {\r\n                        useFastTwoNoteArp = true;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                    this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                } else {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        // Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n                        this.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        toSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            if (channel >= this.pitchChannelCount) {\r\n                                this.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                this.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterCutoff: {\r\n                if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const instrument: Instrument = this.channels[channel].instruments[0];\r\n                        const legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    } else if (beforeSix && variant == \"beepbox\") {\r\n                        for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                                const instrument: Instrument = this.channels[channel].instruments[i];\r\n                                const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                if (channel < this.pitchChannelCount) {\r\n                                    instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                    instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                                    instrument.filterResonance = 0;\r\n                                } else {\r\n                                    instrument.filterCutoff = 10;\r\n                                    instrument.filterEnvelope = 1;\r\n                                    instrument.filterResonance = 0;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n                        instrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n                        instrument.filterResonance = 0;\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.filterEnvelope: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.drumset) {\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                } else {\r\n                    instrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                if (variant == \"beepbox\") {\r\n                    // Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n                    // piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.transition: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            this.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                } else if (beforeFour || variant == \"beepbox\") {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 3, 2, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n                    const channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                                ? legacyEnvelopes[effect]\r\n                                : instrument.filterEnvelope;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                    const legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = legacyEffects[effect];\r\n                    instrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n                        ? legacyEnvelopes[effect]\r\n                        : instrument.filterEnvelope;\r\n                } else {\r\n                    const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.vibrato = vibrato;\r\n                    // Custom vibrato\r\n                    if (vibrato == Config.vibratos.length) {\r\n                        instrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                        instrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    // Enforce standard vibrato settings\r\n                    else {\r\n                        instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                        instrument.vibratoSpeed = 10; // Normal speed\r\n                        instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n                        instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                instrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n            } break;\r\n            case SongTagCode.interval: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                interval = 2;\r\n                                this.channels[channel].instruments[i].chord = 3;\r\n                            }\r\n                            this.channels[channel].instruments[i].interval = interval;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let interval: number = clamp(0, Config.intervals.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        interval = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.chord: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channel].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && variant == \"beepbox\") {\r\n                    for (channel = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                            const instrument: Instrument = this.channels[channel].instruments[i];\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (variant == \"beepbox\") {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                }\r\n                else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.panning: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (variant == \"beepbox\") {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                }\r\n                else {\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n                // Now, pan delay follows on new versions of jummbox.\r\n                if (variant == \"jummbox\" && !beforeThree)\r\n                    instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    // Limiter isn't used\r\n                    this.compressionRatio = 1.0;\r\n                    this.limitRatio = 1.0;\r\n                    this.limitRise = 4000.0;\r\n                    this.limitDecay = 4.0;\r\n                    this.limitThreshold = 1.0;\r\n                    this.compressionThreshold = 1.0;\r\n                    this.masterGain = 1.0;\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackType: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorEnvelopes: {\r\n                for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channel].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && variant == \"beepbox\") {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channel].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channel: number;\r\n                let largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n                let recentPitchBitLength: number = ( largerChords ? 4 : 3 );\r\n                let recentPitchLength: number = ( largerChords ? 16 : 8 );\r\n                if (beforeThree && variant == \"beepbox\") {\r\n                    channel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channel = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                let neededInstrumentBits: number = 0;\r\n                while ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n                while (true) {\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                instrument.modStatuses[mod] = bits.read(2);\r\n\r\n                                // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                                if (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n                                    // Clamp to pitch/noise max\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n                                    }\r\n                                    else {\r\n                                        instrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                    }\r\n\r\n                                    instrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n                                    instrument.modSettings[mod] = bits.read(6);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * 12;\r\n                    let note: Note | null = null;\r\n                    let pin: NotePin | null = null;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : 12) + octaveOffset;\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = this.channels[channel].patterns[i];\r\n                        newPattern.reset();\r\n                        newPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n                        if (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && variant == \"beepbox\")\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                let pinObj: any;\r\n                                let pitch: number;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n                                    shape.pinCount = bits.readPinCount();\r\n\r\n                                    if (variant == \"beepbox\") {\r\n                                        shape.initialVolume = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialVolume = bits.read(3);\r\n                                    } else {\r\n                                        shape.initialVolume = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        pinObj = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && variant == \"beepbox\")\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n\r\n                                        if (variant == \"beepbox\") {\r\n                                            pinObj.volume = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.volume = bits.read(3);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.volume = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                                note = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n                                note.pitches = [];\r\n                                note.pins.length = 1;\r\n                                const pitchBends: number[] = [];\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches.push(pitch);\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n\r\n                                pitchBends.unshift(note.pitches[0]);\r\n\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n                                    pin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n                                    note.pins.push(pin);\r\n                                }\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                                newNotes.push(note);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (beforeThree && variant == \"beepbox\") {\r\n                        break;\r\n                    } else {\r\n                        channel++;\r\n                        if (channel >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n            } break;\r\n        }\r\n\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            if (toSetOctaves[channel] != null) {\r\n                this.channels[channel].octave = toSetOctaves[channel];\r\n            }\r\n        }\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n            const isModChannel: boolean = this.getChannelIsMod(channel);\r\n            for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                instrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of this.channels[channel].patterns) {\r\n                const noteArray: Object[] = [];\r\n                for (const note of pattern.notes) {\r\n                    let volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n                    const pointArray: Object[] = [];\r\n                    for (const pin of note.pins) {\r\n                        let useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n                        pointArray.push({\r\n                            \"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                            \"pitchBend\": pin.interval,\r\n                            \"volume\": useVol,\r\n                            \"forMod\": isModChannel,\r\n                        });\r\n                    }\r\n\r\n                    noteArray.push({\r\n                        \"pitches\": note.pitches,\r\n                        \"points\": pointArray,\r\n                    });\r\n                }\r\n\r\n                patternArray.push({\r\n                    \"instrument\": pattern.instrument + 1,\r\n                    \"notes\": noteArray,\r\n                });\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(this.channels[channel].bars[i]);\r\n            }\r\n\r\n            channelArray.push({\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"octaveScrollBar\": this.channels[channel].octave,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            });\r\n        }\r\n\r\n        return {\r\n            \"name\": this.title,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestJummBoxVersion,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            //\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n            \"channels\": channelArray,\r\n        };\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"dbl harmonic :)\",\r\n                \"romani :(\": \"dbl harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                const letter: string = key.charAt(0).toUpperCase();\r\n                const symbol: string = key.charAt(1).toLowerCase();\r\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                let index: number | undefined = letterMap[letter];\r\n                const offset: number | undefined = accidentalMap[symbol];\r\n                if (index != undefined) {\r\n                    if (offset != undefined) index += offset;\r\n                    if (index < 0) index += 12;\r\n                    index = index % 12;\r\n                    this.key = index;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"]) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        this.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"]) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n                }\r\n\r\n                for (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n                    channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = this.instrumentsPerChannel;\r\n\r\n                for (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n                    channel.patterns[i] = new Pattern();\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = 1;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n\r\n                for (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n                    const instrument: Instrument = channel.instruments[i];\r\n                    instrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = channel.patterns[i];\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n                    if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n                        const maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n                        //let tickClock: number = 0;\r\n                        for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                            if (j >= maxNoteCount) break;\r\n\r\n                            const noteObject = patternObject[\"notes\"][j];\r\n                            if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                                continue;\r\n                            }\r\n\r\n                            const note: Note = new Note(0, 0, 0, 0);\r\n                            note.pitches = [];\r\n                            note.pins = [];\r\n\r\n                            for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                                const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                                if (note.pitches.indexOf(pitch) != -1) continue;\r\n                                note.pitches.push(pitch);\r\n                                if (note.pitches.length >= Config.maxChordSize) break;\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            //let noteClock: number = tickClock;\r\n                            let startInterval: number = 0;\r\n                            for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                                const pointObject: any = noteObject[\"points\"][k];\r\n                                if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                                const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                                const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                                let volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n                                // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                                // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                                let volume: number;\r\n                                if (pointObject[\"volume\"] == undefined) {\r\n                                    volume = volumeCap;\r\n                                } else if (pointObject[\"forMod\"] == undefined) {\r\n                                    volume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n                                else {\r\n                                    volume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                                }\r\n\r\n                                if (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n                                if (note.pins.length == 0) {\r\n                                    //if (time < noteClock) continue;\r\n                                    note.start = time;\r\n                                    startInterval = interval;\r\n                                } else {\r\n                                    //if (time <= noteClock) continue;\r\n                                }\r\n                                //noteClock = time;\r\n\r\n                                note.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n                            }\r\n                            if (note.pins.length < 2) continue;\r\n\r\n                            note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                            const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                            let lowestPitch: number = maxPitch;\r\n                            let highestPitch: number = 0;\r\n                            for (let k: number = 0; k < note.pitches.length; k++) {\r\n                                note.pitches[k] += startInterval;\r\n                                if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                                    note.pitches.splice(k, 1);\r\n                                    k--;\r\n                                }\r\n                                if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                                if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                            }\r\n                            if (note.pitches.length < 1) continue;\r\n\r\n                            for (let k: number = 0; k < note.pins.length; k++) {\r\n                                const pin: NotePin = note.pins[k];\r\n                                if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                                if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                                if (k >= 2) {\r\n                                    if (pin.interval == note.pins[k - 1].interval &&\r\n                                        pin.interval == note.pins[k - 2].interval &&\r\n                                        pin.volume == note.pins[k - 1].volume &&\r\n                                        pin.volume == note.pins[k - 2].volume) {\r\n                                        note.pins.splice(k - 1, 1);\r\n                                        k--;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            pattern.notes.push(note);\r\n                            //tickClock = note.end;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n    }\r\n\r\n    public getPattern(channel: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channel].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channel].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getPatternInstrument(channel: number, bar: number): number {\r\n        const pattern: Pattern | null = this.getPattern(channel, bar);\r\n        return pattern == null ? 0 : pattern.instrument;\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n}\r\n\r\nclass Tone {\r\n    public instrument: Instrument;\r\n    public readonly pitches: number[] = [0, 0, 0, 0];\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number = 0;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public active: boolean = false;\r\n    public noteStart: number = 0;\r\n    public noteEnd: number = 0;\r\n    public noteLengthTicks: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public lastVolume: number = 0;\r\n    public stereoVolume1: number = 0.0;\r\n    public stereoVolume2: number = 0.0;\r\n    public stereoOffset: number = 0.0;\r\n    public stereoDelay: number = 0.0;\r\n    public sample: number = 0.0;\r\n    public readonly phases: number[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n    public readonly volumeStarts: number[] = [];\r\n    public readonly volumeDeltas: number[] = [];\r\n    public volumeStart: number = 0.0;\r\n    public volumeDelta: number = 0.0;\r\n    public phaseDeltaScale: number = 0.0;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public filter: number = 0.0;\r\n    public filterScale: number = 0.0;\r\n    public filterSample0: number = 0.0;\r\n    public filterSample1: number = 0.0;\r\n    public vibratoScale: number = 0.0;\r\n    public intervalMult: number = 0.0;\r\n    public intervalVolumeMult: number = 1.0;\r\n    public feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n            this.feedbackOutputs[i] = 0.0;\r\n        }\r\n        this.sample = 0.0;\r\n        this.filterSample0 = 0.0;\r\n        this.filterSample1 = 0.0;\r\n        this.liveInputSamplesHeld = 0.0;\r\n    }\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            for (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n                for (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n                    Synth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n                    song.channels[channel].instruments[instrument].warmUp();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n                for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                if (!(this.song.channels[channel].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channel, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n                            let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                                        if (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                            latestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n                                        this.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n                                        latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n\r\n    public song: Song | null = null;\r\n    public liveInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    private tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[];\r\n    private modInsValues: (number | null)[][][];\r\n    private nextModValues: (number | null)[];\r\n    private nextModInsValues: (number | null)[][][];\r\n    private isPlayingSong: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly activeTones: Array<Deque<Tone>> = [];\r\n    private tyingOver: number[] = [];\r\n    private readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n    //private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n    private readonly releasedTones: Array<Deque<Tone>> = [];\r\n    private readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n    //private highpassInput: number = 0.0;\r\n    //private highpassOutput: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private stereoBufferIndex: number = 0;\r\n    private samplesForNone: Float32Array | null = null;\r\n    private samplesForReverb: Float32Array | null = null;\r\n    private samplesForChorus: Float32Array | null = null;\r\n    private samplesForChorusReverb: Float32Array | null = null;\r\n\r\n    private chorusDelayLine: Float32Array = new Float32Array(2048);\r\n    private chorusDelayPos: number = 0;\r\n    private chorusPhase: number = 0;\r\n\r\n    private reverbDelayLine: Float32Array = new Float32Array(16384);\r\n    private reverbDelayPos: number = 0;\r\n    private reverbFeedback0: number = 0.0;\r\n    private reverbFeedback1: number = 0.0;\r\n    private reverbFeedback2: number = 0.0;\r\n    private reverbFeedback3: number = 0.0;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            remainder = samplesPerTick * (remainder - this.tick);\r\n            this.tickSampleCountdown = samplesPerTick - remainder;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    // Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].volume;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n                                                            let currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n        let val: number;\r\n        let nextVal: number;\r\n        switch (setting) {\r\n            case ModSetting.mstSongVolume:\r\n            case ModSetting.mstReverb:\r\n            case ModSetting.mstTempo:\r\n            case ModSetting.mstSongDetune:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                nextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n                if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                    this.modValues[setting] = val;\r\n                    this.nextModValues[setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstInsVolume:\r\n            case ModSetting.mstPan:\r\n            case ModSetting.mstPulseWidth:\r\n            case ModSetting.mstFilterCut:\r\n            case ModSetting.mstFilterPeak:\r\n            case ModSetting.mstFMSlider1:\r\n            case ModSetting.mstFMSlider2:\r\n            case ModSetting.mstFMSlider3:\r\n            case ModSetting.mstFMSlider4:\r\n            case ModSetting.mstFMFeedback:\r\n            case ModSetting.mstVibratoDepth:\r\n            case ModSetting.mstVibratoSpeed:\r\n            case ModSetting.mstVibratoDelay:\r\n            case ModSetting.mstArpeggioSpeed:\r\n            case ModSetting.mstPanDelay:\r\n            case ModSetting.mstResetArpeggio:\r\n            case ModSetting.mstDetune:\r\n                val = this.song!.modValueToReal(volumeStart, setting);\r\n                nextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n                let channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n                if (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n                    || this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n                    || this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n                    this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n                    this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n                }\r\n                break;\r\n            case ModSetting.mstNextBar:\r\n                val = (this.song as Song).modValueToReal(volumeStart, setting);\r\n                break;\r\n            case ModSetting.mstNone:\r\n            default:\r\n                val = -1;\r\n                break;\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        if (this.audioCtx == null || this.scriptNode == null) {\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.isPlayingSong = true;\r\n        this.warmUpSynthesizer(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n        }\r\n        this.modValues = [];\r\n        this.modInsValues = [];\r\n        this.nextModValues = [];\r\n        this.nextModInsValues = [];\r\n        this.tyingOver = [];\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.reverbDelayPos = 0;\r\n        this.reverbFeedback0 = 0.0;\r\n        this.reverbFeedback1 = 0.0;\r\n        this.reverbFeedback2 = 0.0;\r\n        this.reverbFeedback3 = 0.0;\r\n        //this.highpassInput = 0.0;\r\n        //this.highpassOutput = 0.0;\r\n        this.freeAllTones();\r\n        for (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n        for (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n        if (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n        if (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n        if (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n        if (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n    }\r\n\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        }\r\n    }\r\n\r\n    public nextBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.bar++;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    public firstBar(): void {\r\n        if (!this.song) return;\r\n        this.bar = 0;\r\n        this.playheadInternal = 0;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public jumpToEditingBar(bar: number): void {\r\n        if (!this.song) return;\r\n\r\n        this.bar = bar;\r\n\r\n        this.playheadInternal = bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public prevBar(): void {\r\n        if (!this.song) return;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        // Reset note ties\r\n        for ( let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++ ) {\r\n            this.tyingOver[channel] = -1;\r\n        }\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        const isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n        if (!isPlayingLiveTones && !this.isPlayingSong) {\r\n            for (let i: number = 0; i < outputBuffer.length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        this.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        const channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n        for (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n            this.activeTones[i] = new Deque<Tone>();\r\n            this.releasedTones[i] = new Deque<Tone>();\r\n        }\r\n        this.activeTones.length = channelCount;\r\n        this.releasedTones.length = channelCount;\r\n        if ( channelCount != this.tyingOver.length ) {\r\n            let idx: number = this.tyingOver.length;\r\n            this.tyingOver.length = channelCount;\r\n            while ( idx < this.tyingOver.length ) {\r\n                this.tyingOver[idx++] = -1;\r\n            }\r\n        }\r\n\r\n        for (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n            this.activeModTones[i] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.activeModTones[i][mod] = new Deque<Tone>();\r\n            }\r\n            this.activeModTones[i].length = Config.modCount;\r\n        }\r\n        this.activeModTones.length = this.song.modChannelCount;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let bufferIndex: number = 0;\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        while (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n        if (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n        if (playSong) {\r\n            if (this.beat >= this.song.beatsPerBar) {\r\n                this.bar++;\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n\r\n                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                    this.bar = this.song.loopStart;\r\n                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                }\r\n            }\r\n            if (this.bar >= this.song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        const stereoBufferLength: number = outputBufferLength * 4;\r\n        if (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n            this.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n            this.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n            this.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n            this.samplesForNone = new Float32Array(stereoBufferLength);\r\n            this.samplesForReverb = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorus = new Float32Array(stereoBufferLength);\r\n            this.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n            this.stereoBufferIndex = 0;\r\n        }\r\n        let stereoBufferIndex: number = this.stereoBufferIndex;\r\n        const samplesForNone: Float32Array = this.samplesForNone;\r\n        const samplesForReverb: Float32Array = this.samplesForReverb;\r\n        const samplesForChorus: Float32Array = this.samplesForChorus;\r\n        const samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n        const reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n        const chorusDuration: number = 2.0;\r\n        const chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n        const chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n        const chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n        const chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n        const chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n        const chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n        const chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n        const chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n        let chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n        let chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n        let reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n        let reverbFeedback0: number = +this.reverbFeedback0;\r\n        let reverbFeedback1: number = +this.reverbFeedback1;\r\n        let reverbFeedback2: number = +this.reverbFeedback2;\r\n        let reverbFeedback3: number = +this.reverbFeedback3;\r\n        let useReverb: number = this.song.reverb;\r\n        if (this.isModActive(ModSetting.mstReverb, true)) {\r\n            useReverb = this.getModValue(ModSetting.mstReverb, true);\r\n        }\r\n        let reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n        //const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n        const compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n        const limitThreshold: number = this.song.limitThreshold; // Default 1\r\n        const compressionRatio: number = this.song.compressionRatio; // Default 1\r\n        const limitRatio: number = this.song.limitRatio; // Default 1\r\n        const masterGain: number = this.song.masterGain; // Default 1\r\n        //let highpassInput: number = +this.highpassInput;\r\n        //let highpassOutput: number = +this.highpassOutput;\r\n        let limit: number = +this.limit;\r\n\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n            for (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n                // Also determines mod tones.\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    for (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n                        const tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n                        if (this.song.channels[channel].muted == false)\r\n                            this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if ( this.wantToSkip ) {\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n            }\r\n\r\n            if (this.isModActive(ModSetting.mstReverb, true)) {\r\n                reverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n            }\r\n\r\n            // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n            const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                for (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrument.LFOtime = instrument.nextLFOtime;\r\n\r\n                    if (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n                        useVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrument.LFOtime = 0;\r\n                        instrument.nextLFOtime = 0;\r\n                    }\r\n                    else {\r\n                        instrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n                if (channel == this.liveInputChannel) {\r\n                    this.determineLiveInputTones(this.song);\r\n\r\n                    for (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n                        const tone: Tone = this.liveInputTones.get(i);\r\n                        // Hmm. Will allow active input from a muted channel for now.\r\n                        //if (this.song.channels[channel].muted == false)\r\n                        this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                    }\r\n                }\r\n\r\n                this.determineCurrentActiveTones(this.song, channel, playSong);\r\n                for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                    const tone: Tone = this.activeTones[channel].get(i);\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n                }\r\n\r\n                for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                    const tone: Tone = this.releasedTones[channel].get(i);\r\n                    if (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n                        this.freeReleasedTone(channel, i);\r\n                        i--;\r\n                        continue;\r\n                    }\r\n\r\n                    const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n                    this.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            let chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            let chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            let chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            let chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            let chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            let chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            chorusPhase += chorusAngle * runLength;\r\n            const chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n            const chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n            const chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n            const chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n            const chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n            const chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n            const chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n            const chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n            const chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n            const chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n            const chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n            const chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n            const runEnd: number = bufferIndex + runLength;\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                const bufferIndexL: number = stereoBufferIndex;\r\n                const bufferIndexR: number = stereoBufferIndex + 1;\r\n                const sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n                const sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n                const sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n                const sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n                const sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n                const sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n                const sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n                const sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n                stereoBufferIndex += 2;\r\n\r\n                const combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n                const combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n                const chorusTap0Ratio: number = chorusTap0Index % 1;\r\n                const chorusTap1Ratio: number = chorusTap1Index % 1;\r\n                const chorusTap2Ratio: number = chorusTap2Index % 1;\r\n                const chorusTap3Ratio: number = chorusTap3Index % 1;\r\n                const chorusTap4Ratio: number = chorusTap4Index % 1;\r\n                const chorusTap5Ratio: number = chorusTap5Index % 1;\r\n                const chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n                const chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n                const chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n                const chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n                const chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n                const chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n                const chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n                const chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n                const chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n                const chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n                const chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n                const chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n                const chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n                const chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n                const chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n                const chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n                const chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n                const chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n                const chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n                const chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n                chorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n                chorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n                chorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n                chorusTap0Index += chorusTap0Delta;\r\n                chorusTap1Index += chorusTap1Delta;\r\n                chorusTap2Index += chorusTap2Delta;\r\n                chorusTap3Index += chorusTap3Delta;\r\n                chorusTap4Index += chorusTap4Delta;\r\n                chorusTap5Index += chorusTap5Delta;\r\n\r\n                // Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n                // good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n                // Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n                // Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n                const reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n                const reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n                const reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n                const reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n                const reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n                const reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n                const reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n                const reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n                const reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n                const reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n                const reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n                reverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n                reverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n                reverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n                reverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n                reverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n                reverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n                reverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n                reverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n                reverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n                // Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n                const sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n                const sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n                /*\r\n                highpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n                highpassInput = sample;\r\n                // use highpassOutput instead of sample below?\r\n                */\r\n\r\n                // A compressor/limiter.\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n                        const tone: Tone = this.releasedTones[channel].get(i);\r\n                        tone.ticksSinceReleased++;\r\n\r\n                        const shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n                        if (shouldFadeOutFast) {\r\n                            this.freeReleasedTone(channel, i);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update arpeggio time, which is used to calculate arpeggio position\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    var atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n                    // Check if any active tones should be released.\r\n                    for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                        // Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n                        var carryOver = false;\r\n                        var toneCount = this.activeTones[channel].count();\r\n                        var pattern = this.song.getPattern(channel, this.bar);\r\n                        if ( pattern != null && atEnd ) {\r\n                            var instrument = pattern.instrument;\r\n                            if ( this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0 ) {\r\n                                // Verify that all tie conditions are met\r\n                                // 1. Check for a note in this channel at the start of the next bar\r\n                                // 2. Check that the note's volume start matches the current volume\r\n                                // 3. Check that the shape (pitches, chord size) is a match\r\n                                // 4. Check that the instruments are the same\r\n                                var targetBar = this.bar + 1;\r\n                                if ( targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n                                    targetBar = this.song.loopStart;\r\n                                }\r\n                                var nextPattern = this.song.getPattern(channel, targetBar);\r\n                                var currNote = this.activeTones[channel].get(0).note;\r\n                                if ( currNote != null ) {\r\n                                    var pin = 0;\r\n                                    while ( currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length-1 )\r\n                                        pin++;\r\n                                    var currVolume = currNote.pins[pin].volume;\r\n                                    var lastInterval = currNote.pins[pin].interval;\r\n\r\n                                    if ( nextPattern != null && nextPattern.instrument == instrument ) {\r\n                                        for( let i: number = 0; i < nextPattern.notes.length; i++ ) {\r\n                                            if ( nextPattern.notes[i].start == 0\r\n                                                && nextPattern.notes[i].pins[0].volume == currVolume\r\n                                                && nextPattern.notes[i].pitches.length == currNote.pitches.length ) {\r\n                                                \r\n                                                carryOver = true;\r\n                                                for ( let j: number = 0; j < currNote.pitches.length; j++ ) {\r\n                                                    // Allow any pitch order\r\n                                                    if ( nextPattern.notes[i].pitches.findIndex( (p) => p == currNote!.pitches[j] + lastInterval ) == -1 ) {\r\n                                                        carryOver = false;\r\n                                                        j = currNote.pitches.length;\r\n                                                    }\r\n                                                }\r\n                                                i = nextPattern.notes.length;\r\n                                                \r\n                                                if ( carryOver ) {\r\n                                                    // Prior to an actual tie, all releasing for hard transitions also needs to be\r\n                                                    // cancelled. So, this check is ran a few parts before the end of a bar too.\r\n                                                    // In those cases, just set tyingOver to 0 for that duration to cancel release\r\n                                                    // handling, but not affect note start time calculations.\r\n                                                    if ( this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar) ) {\r\n                                                        // Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n                                                        if ( this.tyingOver[channel] < 0 ) {\r\n                                                            this.tyingOver[channel] = 0;\r\n                                                        }\r\n                                                    }\r\n                                                    // Special case: tying over a whole bar, just add the length.\r\n                                                    else if ( currNote.start == 0 && this.tyingOver[channel] >= 0 ) {\r\n                                                        this.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n                                                    }\r\n                                                    else {\r\n                                                        // Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n                                                        this.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        for (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n                            const tone: Tone = this.activeTones[channel].get(i);\r\n                            const transition: Transition = tone.instrument.getTransition();\r\n                            \r\n                            if (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                // Free tone if the transition allows\r\n                                if (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n                                    if (transition.releases) {\r\n                                        this.releaseTone(channel, tone);\r\n                                    } else {\r\n                                        this.freeTone(tone);\r\n                                    }\r\n                                    this.activeTones[channel].remove(i);\r\n                                    i--;\r\n                                }\r\n\r\n                                // End of note: if not actively trying to carry over, kill note tie\r\n                                if ( !carryOver ) {\r\n                                    this.tyingOver[channel] = -1;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    for (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                            for (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n                                const tone: Tone = this.activeModTones[channel][mod].get(i);\r\n                                const transition: Transition = tone.instrument.getTransition();\r\n                                if (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n                                    this.freeTone(tone);\r\n                                    this.activeModTones[channel][mod].remove(i);\r\n                                    i--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == this.song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n                                this.bar++;\r\n                                if (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n                                    this.bar = this.song.loopStart;\r\n                                    if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n                                }\r\n                                if (this.bar >= this.song.barCount) {\r\n                                    this.bar = 0;\r\n                                    if (this.loopRepeatCount != -1) {\r\n                                        ended = true;\r\n                                        this.resetEffects();\r\n                                        this.pause();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(ModSetting.mstTempo, true)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n                for (let instrument of this.song.channels[channel].instruments) {\r\n                    instrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n                for (let channel: number = 0; channel < channelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n        if (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n        if (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n        if (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n        //if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n        //if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n        if (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n        this.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n        this.chorusPhase = chorusPhase;\r\n        this.chorusDelayPos = chorusDelayPos;\r\n        this.reverbDelayPos = reverbDelayPos;\r\n        this.reverbFeedback0 = reverbFeedback0;\r\n        this.reverbFeedback1 = reverbFeedback1;\r\n        this.reverbFeedback2 = reverbFeedback2;\r\n        this.reverbFeedback3 = reverbFeedback3;\r\n        //this.highpassInput = highpassInput;\r\n        //this.highpassOutput = highpassOutput;\r\n        this.limit = limit;\r\n\r\n        if (playSong) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n        const secondsGenerated = samplesAccumulated / 44100;\r\n        const secondsRequired = samplePerformance / 1000;\r\n        const ratio = secondsRequired / secondsGenerated;\r\n        console.log(ratio);\r\n        samplePerformance = 0;\r\n        samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.reset();\r\n            tone.active = false;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(channel: number, tone: Tone): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.releasedTones[channel].pushFront(tone);\r\n        }\r\n        else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    private freeReleasedTone(channel: number, toneIndex: number): void {\r\n        if (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n            this.freeTone(this.releasedTones[channel].get(toneIndex));\r\n            this.releasedTones[channel].remove(toneIndex);\r\n        } else {\r\n            /*\r\n            for (let mod = 0; mod < Config.modCount; mod++) {\r\n            this.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n            this.releasedModTones[channel][mod].remove(toneIndex);\r\n            }\r\n            */\r\n        }\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        while (this.liveInputTones.count() > 0) {\r\n            this.freeTone(this.liveInputTones.popBack());\r\n        }\r\n        for (let i: number = 0; i < this.activeTones.length; i++) {\r\n            while (this.activeTones[i].count() > 0) {\r\n                this.freeTone(this.activeTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i: number = 0; i < this.releasedTones.length; i++) {\r\n            while (this.releasedTones[i].count() > 0) {\r\n                this.freeTone(this.releasedTones[i].popBack());\r\n            }\r\n        }\r\n        for (let i = 0; i < this.activeModTones.length; i++) {\r\n            for (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n                while (this.activeModTones[i][mod].count() > 0) {\r\n                    this.freeTone(this.activeModTones[i][mod].popBack());\r\n                }\r\n            }\r\n        }\r\n        /*\r\n        for (let i = 0; i < this.releasedModTones.length; i++) {\r\n        for (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n        while (this.releasedModTones[i][mod].count() > 0) {\r\n        this.freeTone(this.releasedModTones[i][mod].popBack());\r\n        }\r\n        }\r\n        }\r\n        */\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song): void {\r\n        const toneList: Deque<Tone> = this.liveInputTones;\r\n        const pitches: number[] = this.liveInputPitches;\r\n        let toneCount: number = 0;\r\n        if (this.liveInputDuration > 0) {\r\n            const instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n            if (instrument.getChord().arpeggiates) {\r\n                let tone: Tone;\r\n                if (toneList.count() == 0) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                    this.releaseTone(this.liveInputChannel, toneList.popFront());\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(0);\r\n                }\r\n                toneCount = 1;\r\n\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    tone.pitches[i] = pitches[i];\r\n                }\r\n                tone.pitchCount = pitches.length;\r\n                tone.chordSize = 1;\r\n                tone.instrument = instrument;\r\n                tone.note = tone.prevNote = tone.nextNote = null;\r\n            } else {\r\n                //const transition: Transition = instrument.getTransition();\r\n                for (let i: number = 0; i < pitches.length; i++) {\r\n                    //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= i) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(this.liveInputChannel, toneList.get(i));\r\n                        tone = this.newTone();\r\n                        toneList.set(i, tone);\r\n                    } else {\r\n                        tone = toneList.get(i);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    tone.pitches[0] = pitches[i];\r\n                    tone.pitchCount = 1;\r\n                    tone.chordSize = pitches.length;\r\n                    tone.instrument = instrument;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            this.releaseTone(this.liveInputChannel, toneList.popBack());\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n        const instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n        const pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n        const time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n        if (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n            // Offset channel (first mod channel is 0 index in mod tone array)\r\n            let modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > time) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                const toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n                    this.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n                } else {\r\n                    while (toneList.count() > 0) {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (!song.getChannelIsMod(channel)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            if (playSong && pattern != null && !song.channels[channel].muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= time) {\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > time) {\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const toneList: Deque<Tone> = this.activeTones[channel];\r\n            if (note != null) {\r\n                if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                this.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n            } else {\r\n                while (toneList.count() > 0) {\r\n                    // Automatically free or release seamless tones if there's no new note to take over.\r\n                    if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                        this.releaseTone(channel, toneList.popBack());\r\n                    } else {\r\n                        this.freeTone(toneList.popBack());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n        let toneCount: number = 0;\r\n        if (instrument.getChord().arpeggiates) {\r\n            let tone: Tone;\r\n            if (toneList.count() == 0) {\r\n                tone = this.newTone();\r\n                toneList.pushBack(tone);\r\n            } else {\r\n                tone = toneList.get(0);\r\n            }\r\n            toneCount = 1;\r\n\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n                tone.pitches[i] = pitches[i];\r\n            }\r\n            tone.pitchCount = pitches.length;\r\n            tone.chordSize = 1;\r\n            tone.instrument = instrument;\r\n            tone.note = note;\r\n            tone.noteStart = note.start - Math.max(0, this.tyingOver[channel]);\r\n            tone.noteEnd = note.end;\r\n            tone.prevNote = prevNote;\r\n            tone.nextNote = nextNote;\r\n            tone.prevNotePitchIndex = 0;\r\n            tone.nextNotePitchIndex = 0;\r\n        } else {\r\n            const transition: Transition = instrument.getTransition();\r\n            for (let i: number = 0; i < pitches.length; i++) {\r\n\r\n                const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n                let prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n                let noteForThisTone: Note = note;\r\n                let nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n                let noteStart: number = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]);\r\n\r\n                if (noteStart > currentPart) {\r\n                    if (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0 ) && prevNoteForThisTone != null) {\r\n                        nextNoteForThisTone = noteForThisTone;\r\n                        noteForThisTone = prevNoteForThisTone;\r\n                        prevNoteForThisTone = null;\r\n                        noteStart = noteForThisTone.start + strumOffsetParts - Math.max(0, this.tyingOver[channel]) ;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let noteEnd: number = noteForThisTone.end;\r\n                if ((transition.isSeamless || this.tyingOver[channel] >= 0 ) && nextNoteForThisTone != null) {\r\n                    noteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n                }\r\n\r\n\r\n                let tone: Tone;\r\n                if (toneList.count() <= i) {\r\n                    tone = this.newTone();\r\n                    toneList.pushBack(tone);\r\n                } else {\r\n                    tone = toneList.get(i);\r\n                }\r\n                toneCount++;\r\n\r\n                tone.pitches[0] = noteForThisTone.pitches[i];\r\n                tone.pitchCount = 1;\r\n                tone.chordSize = noteForThisTone.pitches.length;\r\n                tone.instrument = instrument;\r\n                tone.note = noteForThisTone;\r\n                tone.noteStart = noteStart;\r\n                tone.noteEnd = noteEnd;\r\n                tone.prevNote = prevNoteForThisTone;\r\n                tone.nextNote = nextNoteForThisTone;\r\n                tone.prevNotePitchIndex = i;\r\n                tone.nextNotePitchIndex = i;\r\n\r\n            }\r\n        }\r\n\r\n        while (toneList.count() > toneCount) {\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            if (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n                this.releaseTone(channel, toneList.popBack());\r\n            } else {\r\n                this.freeTone(toneList.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        Synth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n        let synthBuffer: Float32Array;\r\n        switch (tone.instrument.effects) {\r\n            case 0: synthBuffer = this.samplesForNone!; break;\r\n            case 1: synthBuffer = this.samplesForReverb!; break;\r\n            case 2: synthBuffer = this.samplesForChorus!; break;\r\n            case 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n            default: throw new Error();\r\n        }\r\n        const synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n        synthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n    }\r\n\r\n    private static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.custom: return customVolume;\r\n            case EnvelopeType.steady: return 1.0;\r\n            case EnvelopeType.twang:\r\n                return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell:\r\n                return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo:\r\n                return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2:\r\n                return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch:\r\n                return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare:\r\n                const speed: number = envelope.speed;\r\n                const attack: number = 0.25 / Math.sqrt(speed);\r\n                return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n            case EnvelopeType.decay:\r\n                return Math.pow(2, -envelope.speed * time);\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n    }\r\n\r\n    private static computeChordVolume(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const instrument: Instrument = tone.instrument;\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const toneWasActive: boolean = tone.active;\r\n        const tickSampleCountdown: number = synth.tickSampleCountdown;\r\n        const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n        const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n        const ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n        const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n        const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n        const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n        const instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n        const treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n            \r\n        tone.phaseDeltaScale = 0.0;\r\n        tone.filter = 1.0;\r\n        tone.filterScale = 1.0;\r\n        tone.vibratoScale = 0.0;\r\n        tone.intervalMult = 1.0;\r\n        tone.intervalVolumeMult = 1.0;\r\n        tone.active = false;\r\n\r\n        let startPan: number = instrument.pan;\r\n        let endPan: number = instrument.pan;\r\n        if (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n            startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n            endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        let startPanDelay: number = instrument.panDelay;\r\n        let endPanDelay: number = instrument.panDelay;\r\n        if (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n            startPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n            endPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n        }\r\n\r\n        const useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n        const useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n        // 10 pan delay is the same amount as vanilla beepbox.\r\n        const maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        const maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n        tone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n        const delayEnd: number = -useEndPan * maxDelayEnd;\r\n        tone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n        tone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n        const stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n        tone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n        tone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n        let resetPhases: boolean = true;\r\n        let partsSinceStart: number = 0.0;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let transitionVolumeStart: number = 1.0;\r\n        let transitionVolumeEnd: number = 1.0;\r\n        let chordVolumeStart: number = chordVolume;\r\n        let chordVolumeEnd: number = chordVolume;\r\n        let customVolumeStart: number = 0.0;\r\n        let customVolumeEnd: number = 0.0;\r\n        let decayTimeStart: number = 0.0;\r\n        let decayTimeEnd: number = 0.0;\r\n\r\n        let volumeReferencePitch: number;\r\n        let basePitch: number;\r\n        let baseVolume: number;\r\n        let pitchDamping: number;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n            } else {\r\n                basePitch = Config.keys[song.key].basePitch;\r\n                baseVolume = 0.3;\r\n            }\r\n            volumeReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseVolume = 0.45;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n            baseVolume = 0.19;\r\n            volumeReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.025;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            basePitch = Config.keys[song.key].basePitch;\r\n            baseVolume = 0.04725;\r\n            volumeReferencePitch = 16;\r\n            pitchDamping = 48;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseVolume = 1.0;\r\n            volumeReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.operatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.volumeStarts[i] = 0.0;\r\n            tone.volumeDeltas[i] = 0.0;\r\n        }\r\n\r\n        if (released) {\r\n            const ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n            const startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n            const endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n            const toneTransition: Transition = tone.instrument.getTransition();\r\n            resetPhases = false;\r\n            partsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            customVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n            transitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            transitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n            decayTimeStart = startTick / Config.ticksPerPart;\r\n            decayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n            if (shouldFadeOutFast) {\r\n                transitionVolumeStart *= 1.0 - startRatio;\r\n                transitionVolumeEnd *= 1.0 - endRatio;\r\n            }\r\n        } else if (tone.note == null) {\r\n            transitionVolumeStart = transitionVolumeEnd = 1;\r\n            customVolumeStart = customVolumeEnd = 1;\r\n            tone.lastInterval = 0;\r\n            tone.lastVolume = 6;\r\n            tone.ticksSinceReleased = 0;\r\n            resetPhases = false;\r\n\r\n            const heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.liveInputSamplesHeld += runLength;\r\n            const heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n            tone.noteLengthTicks = heldTicksEnd;\r\n            const heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n            const heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n            partsSinceStart = Math.floor(heldPartsStart);\r\n            decayTimeStart = heldPartsStart;\r\n            decayTimeEnd = heldPartsEnd;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n            const partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n            const noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n            const noteEnd: number = tone.noteEnd;\r\n\r\n            partsSinceStart = time - noteStart;\r\n\r\n            let endPinIndex: number;\r\n            for (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n                if (note.pins[endPinIndex].time + note.start > time) break;\r\n            }\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n            const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n            tone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.noteLengthTicks = noteLengthTicks;\r\n\r\n            const tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n            const tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            let customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n            let customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n            let transitionVolumeTickStart: number = 1.0;\r\n            let transitionVolumeTickEnd: number = 1.0;\r\n            let chordVolumeTickStart: number = chordVolume;\r\n            let chordVolumeTickEnd: number = chordVolume;\r\n            let intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            let intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            let decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n            let decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n            resetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n            // if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n            // if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n            // note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n            const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n            if (treatAsSeamless && !transition.slides && note.start == 0) {\r\n                // Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n                resetPhases = !toneWasActive;\r\n            } else if (treatAsSeamless && prevNote != null) {\r\n                resetPhases = !toneWasActive;\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n                    const intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n                    const volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n                    const decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            }\r\n            if (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n                // Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n            } else if (treatAsSeamless && nextNote != null) {\r\n                if (transition.slides) {\r\n                    const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n                    const slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n                    const slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n                    const intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n                    const volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n                    const decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n                    intervalTickStart += slideRatioStartTick * intervalDiff;\r\n                    intervalTickEnd += slideRatioEndTick * intervalDiff;\r\n                    customVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n                    customVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n                    decayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n                    decayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n                    if (!chord.arpeggiates) {\r\n                        const chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n                        chordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n                        chordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n                    }\r\n                }\r\n            } else if (!(transition.releases && synth.tyingOver[channel] < 0 )) {\r\n                const releaseTicks: number = transition.releaseTicks;\r\n                if (releaseTicks > 0.0) {\r\n                    transitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n                    transitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n                }\r\n            }\r\n\r\n            intervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n            intervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n            if (instrument.type != InstrumentType.mod) {\r\n                customVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n                customVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n            } else {\r\n                customVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n                customVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n                tone.customVolumeStart = customVolumeStart;\r\n                tone.customVolumeEnd = customVolumeEnd;\r\n            }\r\n            transitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n            transitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n            chordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n            chordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n            decayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n            decayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n        }\r\n\r\n        const sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n        tone.active = true;\r\n\r\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n            const lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n            const lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n            let useVibratoStart: number = instrument.vibratoDepth;\r\n            let useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n            if (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n                useVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n                useVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            // Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n            let partsStart: number;\r\n            let partsEnd: number;\r\n            const activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n            if (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n                partsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n                partsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n            }\r\n            else {\r\n                let vibratoDelayStart: number = instrument.vibratoDelay;\r\n                let vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n                if (activeVibratoDelayMods) {\r\n                    vibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n                    vibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n                    // Special case - max vibrato delay means neeeeeever vibrato.\r\n                    if (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayStart = Number.MAX_VALUE;\r\n                    }\r\n                    if (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n                        vibratoDelayEnd = Number.MAX_VALUE;\r\n                    }\r\n                }\r\n\r\n                partsStart = vibratoDelayStart;\r\n                partsEnd = vibratoDelayEnd;\r\n\r\n            }\r\n\r\n            const vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n            const vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n            const vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n            const vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n            intervalStart += vibratoStart;\r\n            intervalEnd += vibratoEnd;\r\n        }\r\n\r\n        if (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n            const attackSeconds: number = transition.attackSeconds;\r\n            if (attackSeconds > 0.0) {\r\n                transitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n                transitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n            }\r\n        }\r\n\r\n        const instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let filterCutModStart: number = instrument.filterCutoff;\r\n        let filterCutModEnd: number = instrument.filterCutoff;\r\n        if (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n            filterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n            filterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n        }\r\n\r\n        let cutoffOctavesModStart: number;\r\n        let cutoffOctavesModEnd: number;\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            cutoffOctavesModStart = 0;\r\n            cutoffOctavesModEnd = 0;\r\n        }\r\n        else {\r\n            cutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n            cutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n        }\r\n\r\n        const filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n        const filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n        const filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n        const filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n        const filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n        const filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n        tone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n        let endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n        tone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n        endFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n        tone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n        let filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n        let filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n        tone.filterResonanceStart = instrument.getFilterResonance();\r\n        tone.filterResonanceDelta = 0.0;\r\n\r\n        let useFilterResonanceStart: number = instrument.filterResonance;\r\n        let useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n        tone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n        if (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n            // This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n            // but the effect and ability to smoothly modulate will be preserved.\r\n            tone.isFirstOrder = false;\r\n\r\n            useFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n            useFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n            // Also set cut in the tone.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n            const filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n            // Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n            tone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n        }\r\n        else {\r\n            // Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n            // No functional difference though.\r\n            tone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n        }\r\n\r\n        if (tone.isFirstOrder == false) {\r\n            filterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n            filterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n        }\r\n        if (filterEnvelope.type == EnvelopeType.decay) {\r\n            filterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n        } else if (filterEnvelope.type == EnvelopeType.twang) {\r\n            filterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n            filterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n        }\r\n\r\n        if (resetPhases) {\r\n            tone.reset();\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.fm) {\r\n            // phase modulation!\r\n\r\n            let sineVolumeBoostStart: number = 1.0;\r\n            let sineVolumeBoostEnd: number = 1.0;\r\n            let totalCarrierVolumeStart: number = 0.0;\r\n            let totalCarrierVolumeEnd: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            if (tone.pitchCount > 1 && !chord.harmonizes) {\r\n                const arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n            for (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n                const pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n                const startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n                tone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n                    amplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n                    amplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                let volumeStart: number = amplitudeMultStart;\r\n                let volumeEnd: number = amplitudeMultEnd;\r\n\r\n                // Check for mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                    const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                    volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                    volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                // Check for SONG mod-related volume delta\r\n                if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                    volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                    volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n                }\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n                    const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n                    const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n                    volumeStart *= pitchVolumeStart;\r\n                    volumeEnd *= pitchVolumeEnd;\r\n\r\n                    totalCarrierVolumeStart += amplitudeCurveStart;\r\n                    totalCarrierVolumeEnd += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    volumeStart *= Config.sineWaveLength * 1.5;\r\n                    volumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n                    sineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n                }\r\n                const operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n                volumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                volumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.volumeStarts[i] = volumeStart;\r\n                tone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n            }\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n                useFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n            }\r\n\r\n            const feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n            const feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n            let feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n            const volumeMult: number = baseVolume * instrumentVolumeMult;\r\n            tone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n            const volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n            sineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n            sineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n            sineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n            tone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n            tone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            // Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n            tone.volumeStart = transitionVolumeStart;\r\n            let volumeEnd: number = transitionVolumeEnd;\r\n\r\n            tone.volumeStart *= customVolumeStart;\r\n            volumeEnd *= customVolumeEnd;\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n        } else {\r\n            let detuneStart: number = instrument.detune / 25;\r\n            let detuneEnd: number = instrument.detune / 25;\r\n            if (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n                detuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n                detuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n            }\r\n\r\n            if (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n                detuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n                detuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n            }\r\n\r\n            let pitch: number = tone.pitches[0];\r\n\r\n            if (tone.pitchCount > 1) {\r\n                const arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.harmonizes) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    tone.intervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            const pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n            const pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n            let settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n            let settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n                settingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n                settingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n                settingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n                settingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                let pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n                if (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n                    pulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n                const pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n                const pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n            }\r\n\r\n            tone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n            tone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n            let volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n            if (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n                tone.volumeStart *= customVolumeStart;\r\n                volumeEnd *= customVolumeEnd;\r\n            }\r\n\r\n            // Check for mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n                const endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n                tone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n                volumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n            // Check for SONG mod-related volume delta\r\n            if (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n                tone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n                volumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n            }\r\n\r\n            tone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n        }\r\n\r\n        tone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / 12.0) / runLength);\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n    private static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                Synth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n\r\n    private static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        var wave: Float64Array;\r\n        var volumeScale: number;\r\n\r\n        const isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n        if (!isCustomWave) {\r\n            wave = Config.chipWaves[instrument.chipWave].samples;\r\n            volumeScale = 1.0;\r\n        }\r\n        else {\r\n            wave = instrument.customChipWaveIntegral;\r\n            // Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n            volumeScale = 0.1;\r\n        }\r\n\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        //console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume * volumeScale;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        //debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n        //console.log(stereoBufferIndex);\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n\r\n    }\r\n\r\n\r\n    private static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        const wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n        const waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / 12.0);\r\n        const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / 12.0) * tone.intervalMult;\r\n        const intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n        if (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n        const deltaRatio: number = intervalB / intervalA;\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n        let phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = wave[indexA];\r\n        let prevWaveIntegralB: number = wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            let waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            let waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDeltaA *= phaseDeltaScale;\r\n            phaseDeltaB *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let phaseDelta: number = tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n\r\n            const sawPhaseA: number = phase % 1;\r\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n            let pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n            // This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n            if (sawPhaseA < phaseDelta) {\r\n                var t = sawPhaseA / phaseDelta;\r\n                pulseWave += (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseA > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseA - 1.0) / phaseDelta;\r\n                pulseWave += (t + t + t * t + 1) * 0.5;\r\n            }\r\n            if (sawPhaseB < phaseDelta) {\r\n                var t = sawPhaseB / phaseDelta;\r\n                pulseWave -= (t + t - t * t - 1) * 0.5;\r\n            } else if (sawPhaseB > 1.0 - phaseDelta) {\r\n                var t = (sawPhaseB - 1.0) / phaseDelta;\r\n                pulseWave -= (t + t + t * t + 1) * 0.5;\r\n            }\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n            pulseWidth += pulseWidthDelta;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\nconst sineWave = beepbox.Config.sineWave;\r\n\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output      = +tone.feedbackOutputs[#];\r\nlet feedbackMult         = +tone.feedbackMult;\r\nconst feedbackDelta        = +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = sineWave[operator#Index];\r\noperator#Output       = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n    private static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = +tone.phaseDeltas[0];\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        if (tone.phases[0] == 0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phase = Math.random() * Config.chipNoiseLength;\r\n        }\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const waveSample: number = wave[phase & 0x7fff];\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumWave();\r\n        let phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            let waveSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n            sample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        let wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n        let volume: number = +tone.volumeStart;\r\n        const volumeDelta: number = +tone.volumeDelta;\r\n        let sample: number = +tone.sample;\r\n\r\n        const isFirstOrder: boolean = tone.isFirstOrder;\r\n        let filter1: number = +tone.filter;\r\n        let filter2: number = isFirstOrder ? 1.0 : filter1;\r\n        const filterScale1: number = +tone.filterScale;\r\n        const filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n        let filterResonance: number = tone.filterResonanceStart;\r\n        let filterResonanceDelta: number = tone.filterResonanceDelta;\r\n        let filterSample0: number = +tone.filterSample0;\r\n        let filterSample1: number = +tone.filterSample1;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n        const stopIndex: number = stereoBufferIndex + runLength;\r\n        stereoBufferIndex += tone.stereoOffset;\r\n        let stereoVolumeL: number = tone.stereoVolumeLStart;\r\n        let stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n        let stereoVolumeR: number = tone.stereoVolumeRStart;\r\n        let stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n        let stereoDelay: number = tone.stereoDelayStart;\r\n        let stereoDelayDelta: number = tone.stereoDelayDelta;\r\n        let delays: number[];\r\n        while (stereoBufferIndex < stopIndex) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & 0x7fff;\r\n            sample = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            sample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n            const feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n            filterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n            filterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n            phase += phaseDelta;\r\n            filter1 *= filterScale1;\r\n            filter2 *= filterScale2;\r\n            phaseDelta *= phaseDeltaScale;\r\n            filterResonance += filterResonanceDelta;\r\n\r\n            const output: number = filterSample1 * volume;\r\n            volume += volumeDelta;\r\n\r\n            //const absStereoDelay: number = Math.abs(stereoDelay);\r\n            //const fracStereoDelay: number = absStereoDelay % 1;\r\n            //const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n            //delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n            // Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n            delays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n            data[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n            data[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n            data[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n            data[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n            stereoVolumeL += stereoVolumeLDelta;\r\n            stereoVolumeR += stereoVolumeRDelta;\r\n            stereoDelay += stereoDelayDelta;\r\n\r\n            stereoBufferIndex += 2;\r\n        }\r\n        tone.phases[0] = phase / Config.chipNoiseLength;\r\n        tone.sample = sample;\r\n\r\n        const epsilon: number = (1.0e-24);\r\n        if (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n        if (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n        tone.filterSample0 = filterSample0;\r\n        tone.filterSample1 = filterSample1;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.volumeStart.\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n        let setting: ModSetting = instrument.modSettings[mod];\r\n\r\n        synth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n        // Reset arps, but only at the start of the note\r\n        if (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n            synth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n        }\r\n        else if (setting == ModSetting.mstNextBar) {\r\n            synth.wantToSkip = true;\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array): number {\r\n        let phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & 0x7fff;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & 0x7fff;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < 16; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % Config.chipNoiseLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static expressionToVolumeMult(expression: number): number {\r\n        return Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n    }\r\n    public static volumeMultToExpression(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n    }\r\n\r\n    private getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(ModSetting.mstTempo, true)) {\r\n            beatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\t\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 4 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"piano\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note|null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\t\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport {ColorConfig} from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish( ): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tif (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\treturn Math.floor(guess);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(guess) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tif (topPitch > max) {\r\n\t\t\t\tif (bottomPitch < min) {\r\n\t\t\t\t\treturn min;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn bottomPitch;\r\n\t\t\t\t}\r\n\t\t\t} else if (bottomPitch < min) {\r\n\t\t\t\treturn topPitch;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\treturn guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging ) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Length\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\"}, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"JummBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"JummBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"JummBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\toption({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"Song Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n\tprivate _openTransitionDropdown: boolean = false;\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\t\t\toperatorNumber,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n\t\t\t);\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n\t\t\tthis._operatorEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\r\n\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n\t\t\t\tgroup = this._transitionDropdownGroup;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"barCount\":\r\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"barCount\":\r\n\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"jummbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}